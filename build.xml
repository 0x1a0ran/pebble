<project name="pebble" default="build" basedir=".">

  <property name="project.name" value="pebble"/>
  <property name="clover.dir" value="clover"/>
  <property name="etc.dir" value="${basedir}/etc"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="web.dir" value="${basedir}/web"/>
  <property name="website.dir" value="${basedir}/website"/>
  <property name="test.dir" value="${basedir}/test"/>
  <property name="build.dir" value="${basedir}/build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="bin.dir" value="${basedir}/bin"/>
  <property name="javadoc.dir" value="${web.dir}/javadoc"/>
  <property name="dist.dir" value="${basedir}/dist"/>

  <property environment="env"/>

  <path id="project.classpath">
    <pathelement path="${env.CLOVER_HOME}/lib/clover.jar"/>
    <pathelement path="${env.ANT_HOME}/lib/ant.jar"/>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
    <dirset dir="etc"/>
  </path>

  <target name="init">
    <propertyfile file="pebble-build.properties" comment="Build information">
        <entry key="build.date" type="date" value="now" pattern="dd MMMM yyyy HH:mm:ss z"/>
        <entry key="build.version" value="2.0.0"/>
    </propertyfile>
    <loadproperties srcFile="pebble-build.properties"/>

    <available property="clover.available" file="${env.CLOVER_HOME}" />

    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}/META-INF"/>
    <mkdir dir="${javadoc.dir}"/>
    <mkdir dir="web/WEB-INF/classes"/>
  </target>

  <target name="compile" depends="init">
    <property name="project.classpath" refid="project.classpath"/>
    <echo message="Using CLASSPATH of ${project.classpath}"/>

    <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
      <classpath refid="project.classpath"/>
    </javac>
  </target>

  <target name="build" depends="compile">
    <copy todir="${classes.dir}" file="pebble-build.properties" />

    <copy todir="${classes.dir}/META-INF">
      <fileset dir="${etc.dir}">
        <include name="*.tld"/>
      </fileset>
    </copy>

    <jar jarfile="${build.dir}/pebble-${build.version}.jar">
      <fileset dir="${classes.dir}">
      </fileset>
    </jar>

    <javac srcdir="${test.dir}" destdir="${classes.dir}" debug="yes">
      <classpath refid="project.classpath"/>
    </javac>

    <copy todir="web/WEB-INF/lib">
      <fileset dir="${build.dir}">
        <include name="pebble-${build.version}.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="acegi-security-1.0.1.jar"/>
        <include name="asm-1.5.3.jar"/>
        <include name="asm-attrs-1.5.3.jar"/>
        <include name="asm-util-1.5.3.jar"/>
        <include name="cglib-2.1_3.jar"/>
        <include name="commons-beanutils.jar"/>
        <include name="commons-codec-1.3.jar"/>
        <include name="commons-collections-3.1.jar"/>
        <include name="commons-fileupload-1.0.jar"/>
        <include name="commons-httpclient-3.0-rc3.jar"/>
        <include name="commons-lang-2.1.jar"/>
        <include name="commons-logging-1.0.4.jar"/>
        <include name="delicious-1.10.jar"/>
        <include name="ehcache-1.2.1RC.jar"/>
        <include name="jcaptcha-all-1.0-RC3.jar"/>
        <include name="jstl-1.1.2.jar"/>
        <include name="log4j.jar"/>
        <include name="lucene-1.4.1.jar"/>
        <include name="oro-2.0.8.jar"/>
        <include name="radeox-1.0-beta2.jar"/>
        <include name="saxpath.jar"/>
        <include name="spring-beans-1.2.8.jar"/>
        <include name="spring-context-1.2.8.jar"/>
        <include name="spring-core-1.2.8.jar"/>
        <include name="spring-dao-1.2.8.jar"/>
        <include name="spring-web-1.2.8.jar"/>
        <include name="standard-1.1.2.jar"/>
        <include name="tidy.jar"/>
        <include name="xmlrpc-1.2-b1.jar"/>
      </fileset>
    </copy>

    <!-- copy license/readme information -->
    <copy todir="web">
      <fileset dir=".">
        <include name="license.txt"/>
        <include name="apache-license.txt"/>
        <include name="changelog.txt"/>
      </fileset>
    </copy>

    <copy file="web/themes/default/screen.css" tofile="web/themes/_pebble/screen.css" />
    <copy todir="web/themes/_pebble/jsp">
      <fileset dir="web/themes/default/jsp">
        <include name="template.jsp"/>
      </fileset>
    </copy>
    <copy todir="web/themes/_pebble/images">
      <fileset dir="web/themes/default/images">
        <include name="*.gif"/>
        <include name="*.jpg"/>
        <include name="*.png"/>
      </fileset>
    </copy>

    <copy todir="web/themes/pebble/jsp">
      <fileset dir="web/themes/default/jsp">
        <include name="*.jsp"/>
      </fileset>
    </copy>

    <copy file="web/themes/pebble/screen.css" tofile="web/themes/orange/screen.css" />
    <replace file="web/themes/orange/screen.css" token="#6e7d8e" value="#9b6e50" />
    <copy todir="web/themes/orange/jsp">
      <fileset dir="web/themes/default/jsp">
        <include name="sidebar.jsp"/>
        <include name="template.jsp"/>
      </fileset>
    </copy>

    <copy todir="web/WEB-INF/classes">
      <fileset dir="${etc.dir}">
        <include name="log4j.properties"/>
        <include name="action.properties"/>
        <include name="secure-action.properties"/>
        <include name="content-types.properties"/>
        <include name="resources*.properties"/>
        <include name="ehcache.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="test" depends="build">
    <junit printsummary="withOutAndErr" haltonfailure="yes" fork="yes" forkMode="once" reloading="false">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${project.classpath}"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest todir="${classes.dir}">
        <fileset dir="${test.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="webtest">
    <ant dir="webtest" antfile="alltests.xml" />
  </target>

  <target name="dist" depends="clean,init,build,test,javadoc,website">
    <property name="release.dir" value="${build.dir}/${project.name}-${build.version}"/>
    <mkdir dir="${release.dir}"/>
    <mkdir dir="${dist.dir}"/>

    <!-- copy pebble Ant tasks into the distribution -->
<!--
    <mkdir dir="${release.dir}/lib"/>
    <copy todir="${release.dir}/lib">
      <fileset dir="${build.dir}">
        <include name="pebble-${build.version}.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="xmlrpc-1.2-b1.jar"/>
      </fileset>
      <fileset dir=".">
        <include name="pebble-ant.xml"/>
      </fileset>
    </copy>
-->

    <!-- copy pebble.war into the distribution -->
    <zip zipfile="${release.dir}/pebble.war">
      <fileset dir="web">
        <exclude name="themes/orange/"/>
        <exclude name="themes/user-*/"/>
        <exclude name="WEB-INF/tmp/"/>
        <exclude name="WEB-INF/work/"/>
      </fileset>
    </zip>

    <copy todir="${release.dir}">
      <fileset dir=".">
        <include name="license.txt"/>
        <include name="apache-license.txt"/>
        <include name="changelog.txt"/>
        <include name="readme.txt"/>
      </fileset>
    </copy>

    <!-- these libraries are required to be installed separately on some app servers -->
    <mkdir dir="${release.dir}/lib"/>
    <copy todir="${release.dir}/lib">
      <fileset dir="lib">
        <include name="activation.jar" />
        <include name="mail.jar" />
      </fileset>
    </copy>

    <mkdir dir="${release.dir}/docs"/>
    <copy todir="${release.dir}/docs">
      <fileset dir="${website.dir}"/>
    </copy>

    <zip zipfile="${dist.dir}/${project.name}-${build.version}.zip">
      <fileset dir="${build.dir}">
        <include name="${project.name}-${build.version}/**"/>
      </fileset>
    </zip>
  </target>

  <target name="with.clover" depends="init">
    <taskdef resource="clovertasks" />
    <typedef resource="clovertypes" />

    <mkdir dir="${clover.dir}"/>

    <clover-setup initstring="${clover.dir}/coverage.db" enabled="true" relative="true" source="1.5">
      <fileset dir="src"/>
    </clover-setup>
  </target>

  <target name="clover.report" depends="with.clover">
    <clover-report>
      <current outfile="${clover.dir}" title="Coverage Report for Pebble">
        <format type="html"/>
      </current>
    </clover-report>
  </target>

  <target name="website">
    <copy file="web/themes/pebble/screen.css" tofile="${website.dir}/screen.css" />
    <copy todir="${website.dir}/images">
      <fileset dir="web/themes/pebble/images">
        <include name="*.gif"/>
        <include name="*.jpg"/>
        <include name="*.png"/>
      </fileset>
    </copy>
    <copy todir="${website.dir}">
      <fileset dir=".">
        <include name="license.txt"/>
      </fileset>
    </copy>

    <zip destfile="${build.dir}/website.zip" basedir="${website.dir}" />
  </target>

  <target name="uploadwebsite" depends="website">
    <loadproperties srcFile="${user.home}/sourceforge.properties"/>
    <scp file="${build.dir}/website.zip" todir="${sourceforge.username}@shell.sf.net:/home/groups/p/pe/pebble/htdocs/website.zip" password="${sourceforge.password}"/>
  </target> 

  <target name="release" depends="dist,website">
  </target>

  <target name="javadoc" depends="init">
    <javadoc packagenames="net.sourceforge.pebble.*"
               sourcepath="${src.dir}"
               defaultexcludes="yes"
               destdir="${javadoc.dir}"
               author="true"
               version="true"
               use="true"
               windowtitle="Pebble">
        <doctitle><![CDATA[<h1>Pebble</h1>]]></doctitle>
        <bottom><![CDATA[<i>Copyright &#169; 2003-2006, Simon Brown. All Rights Reserved.</i>]]></bottom>
        <link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp"/>
        <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
      </javadoc>
  </target>

  <target name="jspc" depends="build">
    <path id="jspc.classpath">
      <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
      <fileset dir="${env.TOMCAT_HOME}/server/lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${env.TOMCAT_HOME}/common/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    <taskdef classname="org.apache.jasper.JspC" name="jasper2" classpathref="jspc.classpath">
    </taskdef>

    <jasper2
             validateXml="false"
             uriroot="web"
             webXmlFragment="web/WEB-INF/generated_web.xml"
             outputDir="web/WEB-INF/src" />

    <javac destdir="web/WEB-INF/classes"
           optimize="off"
           debug="on" failonerror="false"
           srcdir="web/WEB-INF/src"
           excludes="**/*.smap">
      <classpath>
        <pathelement location="web/WEB-INF/classes"/>
        <fileset dir="web/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${env.TOMCAT_HOME}/common/classes"/>
        <fileset dir="${env.TOMCAT_HOME}/common/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${env.TOMCAT_HOME}/shared/classes"/>
        <fileset dir="${env.TOMCAT_HOME}/shared/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <include name="**" />
      <exclude name="tags/**" />
    </javac>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${clover.dir}"/>
    <delete dir="${javadoc.dir}"/>
    <delete dir="web/docs"/>
    <delete dir="web/WEB-INF/classes"/>
    <delete dir="web/WEB-INF/lib"/>
    <delete dir="web/WEB-INF/src"/>
    <delete dir="web/WEB-INF/tmp"/>
    <delete dir="web/WEB-INF/work"/>
    <delete file="web/WEB-INF/generated_web.xml"/>
  </target>

  <target name="nightlybuild" depends="dist">
    <loadproperties srcFile="${user.home}/sourceforge.properties"/>
    <scp file="${dist.dir}/${project.name}-${build.version}.zip" todir="${sourceforge.username}@shell.sf.net:/home/groups/p/pe/pebble/htdocs/pebble-nightly.zip" password="${sourceforge.password}"/>

    <copy file="website/index.html" tofile="${build.dir}/index.html" />
    <replace file="${build.dir}/index.html">
      <replacetoken><![CDATA[<!-- @@nightlyBuild@@ -->]]></replacetoken>
      <replacevalue><![CDATA[Nightly build : <a href="http://pebble.sourceforge.net/pebble-nightly.zip">@@buildDate@@</a>
          <br />
]]></replacevalue>
    </replace>
    <replace file="${build.dir}/index.html" token="@@buildDate@@" value="${build.date}" />
    <scp file="${build.dir}/index.html" todir="${sourceforge.username}@shell.sf.net:/home/groups/p/pe/pebble/htdocs/index.html" password="${sourceforge.password}"/>
  </target>

</project>
