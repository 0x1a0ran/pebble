<project name="pebble" default="build" basedir=".">

  <property name="project.name" value="pebble"/>
  <property name="clover.dir" value="clover"/>
  <property name="etc.dir" value="${basedir}/etc"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="docs.dir" value="${basedir}/docs"/>
  <property name="javadoc.dir" value="${basedir}/javadoc"/>
  <property name="test.dir" value="${basedir}/test"/>
  <property name="build.dir" value="${basedir}/build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="bin.dir" value="${basedir}/bin"/>
  <property name="dist.dir" value="${basedir}/dist"/>

  <property environment="env"/>

  <path id="project.classpath">
    <pathelement path="${env.CLOVER_HOME}/lib/clover.jar"/>
    <pathelement path="${env.ANT_HOME}/lib/ant.jar"/>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
    <dirset dir="etc"/>
  </path>

  <target name="init">
    <propertyfile file="pebble-build.properties" comment="Build information">
        <entry key="build.date" type="date" value="now" pattern="dd MMMM yyyy HH:mm:ss ZZZ"/>
        <entry key="build.version" value="2.0.0-M2"/>
    </propertyfile>
    <loadproperties srcFile="pebble-build.properties"/>

    <available property="clover.available" file="${env.CLOVER_HOME}" />

    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}/META-INF"/>
    <mkdir dir="${javadoc.dir}"/>
    <mkdir dir="web/WEB-INF/classes"/>
  </target>

  <target name="compile" depends="init">
    <property name="project.classpath" refid="project.classpath"/>
    <echo message="Using CLASSPATH of ${project.classpath}"/>

    <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
      <classpath refid="project.classpath"/>
    </javac>
  </target>

  <target name="build" depends="compile">
    <copy todir="${classes.dir}" file="pebble-build.properties" />

    <copy todir="${classes.dir}/META-INF">
      <fileset dir="${etc.dir}">
        <include name="*.tld"/>
      </fileset>
    </copy>

    <jar jarfile="${build.dir}/pebble-${build.version}.jar">
      <fileset dir="${classes.dir}">
      </fileset>
    </jar>

    <javac srcdir="${test.dir}" destdir="${classes.dir}" debug="yes">
      <classpath refid="project.classpath"/>
    </javac>

    <copy todir="web/WEB-INF/lib">
      <fileset dir="${build.dir}">
        <include name="pebble-${build.version}.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="acegi-security-1.0.0-RC2.jar"/>
        <include name="commons-beanutils.jar"/>
        <include name="commons-codec-1.3.jar"/>
        <include name="commons-fileupload-1.0.jar"/>
        <include name="commons-httpclient-3.0-rc3.jar"/>
        <include name="commons-logging-1.0.4.jar"/>
        <include name="delicious-1.10.jar"/>
        <include name="jstl-1.1.2.jar"/>
        <include name="log4j.jar"/>
        <include name="lucene-1.4.1.jar"/>
        <include name="oro-2.0.8.jar"/>
        <include name="radeox-1.0-beta2.jar"/>
        <include name="saxpath.jar"/>
        <include name="spring-1.2.6.jar"/>
        <include name="standard-1.1.2.jar"/>
        <include name="xmlrpc-1.2-b1.jar"/>
      </fileset>
    </copy>

    <!-- copy license/readme information -->
    <copy todir="web">
      <fileset dir=".">
        <include name="license.txt"/>
        <include name="apache-license.txt"/>
        <include name="changelog.txt"/>
      </fileset>
    </copy>

    <copy file="web/themes/default/theme.css" tofile="web/themes/_pebble/theme.css" />
    <copy todir="web/themes/_pebble/jsp">
      <fileset dir="web/themes/default/jsp">
        <include name="template.jsp"/>
      </fileset>
    </copy>
    <copy todir="web/themes/_pebble/images">
      <fileset dir="web/themes/default/images">
        <include name="*.png"/>
      </fileset>
    </copy>

    <copy todir="web/WEB-INF/classes">
      <fileset dir="${etc.dir}">
        <include name="log4j.properties"/>
        <include name="action.properties"/>
        <include name="secure-action.properties"/>
        <include name="content-types.properties"/>
        <include name="resources*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="docs" depends="init">
    <echo message="Building Pebble documentation" />

    <loadfile property="header" srcFile="${docs.dir}/header.html"/>
    <loadfile property="footer" srcFile="${docs.dir}/footer.html"/>

    <mkdir dir="${build.dir}/docs"/>
    <copy todir="${build.dir}/docs">
      <fileset dir="${docs.dir}" />
    </copy>

    <replace dir="${build.dir}/docs" token="@header@" value="${header}">
      <include name="**/*.html"/>
    </replace>
    <replace dir="${build.dir}/docs" token="@footer@" value="${footer}">
      <include name="**/*.html"/>
    </replace>

    <delete file="${build.dir}/docs/header.html" />
    <delete file="${build.dir}/docs/footer.html" />

    <copy file="changelog.txt" todir="${build.dir}/docs" />

    <copy todir="web/docs">
      <fileset dir="${build.dir}/docs/"/>
    </copy>
  </target>

  <target name="test" depends="build">
    <junit printsummary="withOutAndErr" haltonfailure="yes" fork="no">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${project.classpath}"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest todir="${classes.dir}">
        <fileset dir="${test.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="webtest">
    <ant dir="webtest" antfile="alltests.xml" />
  </target>

  <target name="dist" depends="clean,init,build,test">
    <property name="release.dir" value="${build.dir}/${project.name}-${build.version}"/>
    <mkdir dir="${release.dir}"/>
    <mkdir dir="${dist.dir}"/>

    <!-- copy pebble Ant tasks into the distribution -->
<!--
    <mkdir dir="${release.dir}/lib"/>
    <copy todir="${release.dir}/lib">
      <fileset dir="${build.dir}">
        <include name="pebble-${build.version}.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="xmlrpc-1.2-b1.jar"/>
      </fileset>
      <fileset dir=".">
        <include name="pebble-ant.xml"/>
      </fileset>
    </copy>
-->

    <!-- copy pebble.war into the distribution -->
    <zip zipfile="${release.dir}/pebble.war">
      <fileset dir="web">
        <exclude name="pebble-web.iml"/>
        <exclude name="themes/blog/"/>
        <exclude name="themes/test/"/>
        <exclude name="themes/blog1/"/>
        <exclude name="themes/blog2/"/>
        <exclude name="themes/blog3/"/>
        <exclude name="WEB-INF/tmp/"/>
        <exclude name="WEB-INF/work/"/>
      </fileset>
    </zip>

    <copy todir="${release.dir}">
      <fileset dir=".">
        <include name="license.txt"/>
        <include name="apache-license.txt"/>
        <include name="changelog.txt"/>
        <include name="readme.txt"/>
      </fileset>
    </copy>

    <mkdir dir="${release.dir}/bin"/>
    <copy todir="${release.dir}/bin">
      <fileset dir="${bin.dir}"/>
    </copy>

<!--
    <mkdir dir="${release.dir}/docs"/>
    <copy todir="${release.dir}/docs">
      <fileset dir="${build.dir}/docs"/>
    </copy>

    <mkdir dir="${release.dir}/docs/javadoc"/>
    <copy todir="${release.dir}/docs/javadoc">
      <fileset dir="${javadoc.dir}"/>
    </copy>
-->

    <zip zipfile="${dist.dir}/${project.name}-${build.version}.zip">
      <fileset dir="${build.dir}/${project.name}-${build.version}"/>
    </zip>
  </target>

  <target name="with.clover" depends="init">
    <taskdef resource="clovertasks" />
    <typedef resource="clovertypes" />

    <mkdir dir="${clover.dir}"/>

    <clover-setup initstring="${clover.dir}/coverage.db" enabled="true" relative="true">
      <fileset dir="src"/>
    </clover-setup>
  </target>

  <target name="clover.report" depends="with.clover">
    <clover-report>
      <current outfile="${clover.dir}" title="Coverage Report for Pebble">
        <format type="html"/>
      </current>
    </clover-report>
  </target>

  <target name="website">
    <property name="website.dir" value="${build.dir}/website"/>
    <mkdir dir="${website.dir}"/>
    <copy todir="${website.dir}">
      <fileset dir="pebble-docs/build" />
      <fileset dir=".">
        <include name="license.txt"/>
        <include name="apache-license.txt"/>
        <include name="changelog.txt"/>
      </fileset>
    </copy>
    <mkdir dir="${website.dir}/javadoc"/>
    <ant dir="pebble-core" target="javadoc"/>
    <copy todir="${website.dir}/javadoc">
      <fileset dir="pebble-core/javadoc"/>
    </copy>
    <copy todir="${website.dir}/clover">
      <fileset dir="${clover.dir}"/>
    </copy>

    <zip destfile="${build.dir}/website.zip" basedir="${build.dir}/website" />
  </target>

  <target name="release" depends="dist,website">
  </target>

  <target name="jspc" depends="build">
    <path id="jspc.classpath">
      <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
      <fileset dir="${env.TOMCAT_HOME}/server/lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${env.TOMCAT_HOME}/common/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    <taskdef classname="org.apache.jasper.JspC" name="jasper2" classpathref="jspc.classpath">
    </taskdef>

    <jasper2
             validateXml="false"
             uriroot="web"
             webXmlFragment="web/WEB-INF/generated_web.xml"
             outputDir="web/WEB-INF/src" />

    <javac destdir="web/WEB-INF/classes"
           optimize="off"
           debug="on" failonerror="false"
           srcdir="web/WEB-INF/src"
           excludes="**/*.smap">
      <classpath>
        <pathelement location="web/WEB-INF/classes"/>
        <fileset dir="web/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${env.TOMCAT_HOME}/common/classes"/>
        <fileset dir="${env.TOMCAT_HOME}/common/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${env.TOMCAT_HOME}/shared/classes"/>
        <fileset dir="${env.TOMCAT_HOME}/shared/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <include name="**" />
      <exclude name="tags/**" />
    </javac>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${clover.dir}"/>
    <delete dir="web/docs"/>
    <delete dir="web/WEB-INF/classes"/>
    <delete dir="web/WEB-INF/lib"/>
    <delete dir="web/WEB-INF/src"/>
    <delete dir="web/WEB-INF/tmp"/>
    <delete dir="web/WEB-INF/work"/>
    <delete file="web/WEB-INF/generated_web.xml"/>
  </target>

</project>
